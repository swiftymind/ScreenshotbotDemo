name: Screenshotbot CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  env:
    SCREENSHOTBOT_API_KEY: ${{ secrets.SCREENSHOTBOT_API_KEY }}
    SCREENSHOTBOT_API_SECRET: ${{ secrets.SCREENSHOTBOT_API_SECRET }}


jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.4.0'

    - name: Check directory structure
      run: |
        pwd
        ls -la
        echo "=== Test directory ==="
        ls -la ScreenshotbotDemoTests/
        echo "=== Checking for reference images ==="
        find . -name "__Snapshots__" -type d || echo "No __Snapshots__ directory found"

    - name: List available schemes
      run: |
        xcodebuild -project ScreenshotbotDemo.xcodeproj -list

    - name: List available simulators
      run: |
        xcrun simctl list devices available

    - name: Build project
      run: |
        xcodebuild build \
          -project ScreenshotbotDemo.xcodeproj \
          -scheme ScreenshotbotDemo \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.5' \
          -derivedDataPath DerivedData

    - name: Run tests with record mode
      continue-on-error: true
      env:
        # Use the correct environment variable for SnapshotTesting framework
        SNAPSHOT_REFERENCE_IMAGES_DIR: ./Tests/__Snapshots__
        # Also try the SwiftTesting record mode
        SNAPSHOT_TESTING_RECORD: true
      run: |
        echo "=== Running Xcode Tests in Record Mode ==="
        xcodebuild test \
          -project ScreenshotbotDemo.xcodeproj \
          -scheme ScreenshotbotDemo \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.5' \
          -enableCodeCoverage YES \
          -derivedDataPath DerivedData \
          -resultBundlePath TestResults.xcresult

    - name: Install ScreenshotBot CLI
      run: |
        curl https://cdn.screenshotbot.io/recorder.sh | sh

    - name: Upload Screenshots to ScreenshotBot
      run: |
        git fetch origin main
        find . -name "__Snapshots__" -type d | while read dir; do
          channel_name=$(echo "$dir" | sed 's|.*Tests/||' | sed 's|/__Snapshots__||')
          ~/screenshotbot/recorder \
            --channel "$channel_name" \
            --directory "$dir" \
            --recursive
        done

    - name: Mark build status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Build completed successfully"
        else
          echo "⚠️ Build completed with test failures"
          echo "This is expected for snapshot tests without reference images"
          echo "Download the artifacts to get the generated reference images"
        fi
